데이터베이스 관리 시스템
- 오라클 DB, MySQL, DB2, MariaDB ....

데이터베이스의 특징
 1) 데이터를 저장하는 객체 또는 관계들의 집합
 2) 관계를 생성하기 위한 일련의 연산자들의 집합

SQL문장
-원하는 결과를 얻어오기 위해 DB에 요청하는 요청문장(Query문)
- sql문장은 대소문자를 구별하지 않는다.
- sql문장의 끝은 세미콜론(;)으로 맺어야 한다.

SQL문장의 종류
1) DML(Data Manipulation Language):데이터 조작어
   - select, insert, update, delete를 가지는 문장
2) DDL(Data Definition Language) : 데이터 정의어
   - create, alter, drop등의 키워드를 가지는 문장
3) DCL(Data Control Language): 데이터 제어어
   - grant, revoke등의 키워드를 가지는 문장

C: Create, insert
R: select(read)
U: update(수정)
D: delete(삭제)

-------------------
1.select문: 데이터베이스에 저장되어 있는 자원들의검색할 때 사용하는 문장
select *from employees; (employees에 있는 모든 자원을 검색)

ex1) 사원테이블에서 사번과 이름, 입사일, 급여를 출력해보자
select EMPLOYEE_ID, FIRST_NAME, HIRE_DATE, SALARY 
from employees;

ex2) 사원테이블에서 사번, 이름 직종, 급여, 보너스, 실제의 보너스 금액을 출력

 select EMPLOYEE_ID, FIRST_NAME, job_id, SALARY, commission_pct, 
 --*를 통해 급여와 보너스를 곱한 연산 수행
 salary*commission_pct AS comm 
 from employees;

[ 별칭 ]

: AS ( 별칭 명) 또는 한칸 띄고 (별칭 명)으로 사용해도 가능.

-----------------------

2. where절 (조건부여)

예) 사원테이블에서 급여가 10000이상인 사원들의 정보를 사번, 이름, 급여 순으로 출력

select employee_id, first_name, salary from employees
where salary >= 10000;



예) where절에 문자를 비교하고 싶다면 반드시 ''로 사용해야 함
where first_name = 'Michael';

문) 사원테이블에서 직종이 IT_PROG인 사원들의 정보를 
사번, 이름 직종, 급여 순을 출력 (값을 비교할땐, 대소문자 따진다)

select employee_id, first_name, job_id, salary from employees
where job_id = 'IT_PROG';


문) 사원테이블에서 입사일이 05년 9월 21일 이후에 사원의 정보를 
사번, 이름, 입사일 순으로 출력

select employee_id, first_name, hire_date from employees
where hire_date >= 09/21/2005;

예) 사원테이블에서 06년도에 입사한 사원들의 정보를 
     사번, 이름, 직종 입사일 순으로 출력

select employee_id, first_name, job_id, hire_date
from employees
where hire_date >= '01/01/2006' and hire_date <= '12/31/2006';

문) 사원테이블에서 급여 가 4000~ 8000 사이인 사원의 이름, 직종, 급여를 출력

select first_name, job_id, salary from employees
where salary >= 4000 and salary <= 8000;

문) 사원테이블에서 직종이 SA_MAN이거나 IT_PROG인 사원들의 모든 정보를 출력

select * from employees
where job_id = 'SA_MAN' or job_id = 'IT_PROG';


문) 사원테이블에서 급여가 2200, 3200, 5000, 6800를 받는 사원들의 정보를 사번, 이름, 직종, 급여 순으로 출력

select employee_id, first_name, job_id, salary
from employees
where salary = 2200 or salary=3200 or salary = 5000 or salary = 6800;

-------------------------
3. SQL연산자
 1) BETWEEN : A와 B사이의 값을 조회할 때 사용(and를 대신해서 사용)
 2) IN: OR을 대신해서 사용하는 연산자
 3) LIKE: 유사검색

--BETWEEN연산자

예) 사원테이블에서 06년도에 입사한 사원들의 정보를 
     사번, 이름, 직종 입사일 순으로 출력

select employee_id, first_name, job_id, hire_date
from employees
where hire_date BETWEEN '01/01/2006' AND '12/31/2006';

문) 사원테이블에서 급여가 5000이상이고, 6000이하인 사원의 정보를
사번, 이름, 급여 순으로 출력

select employee_id, first_name, salary
from employees
where salary Between 5000 and 6000;

--IN연산자

예) 직종이 SA_MAN, IT_PROG인 사원들의 정보를 이름, 직종순으로 출력

select first_name, job_id from employees
where job_id IN( 'SA_MAN' , 'IT_PROG' );

문) 급여가 2200, 3200, 5000, 6800을 받는 사원들의 정보를
이름, 직종, 급여순으로 출력하되, IN 연산자를 사용하시오.
select first_name, job_id, salary
from employees
where salary IN(2200,3200,5000,6800);

예) 사원테이블에서 직종이 SA_MAN, IT_PROG가 아닌 모든 사원들의 정보 출력

select * from employees
where job_id Not IN ('SA_MAN' , 'IT_PROG');



--LIKE연산자
-- % : 모든 값
-- _ : 하나의 값
  ex) 'M%' : M으로 시작하는 모든 값
  ex) '%M' : M으로 끝나는 모든 값
  ex) '%a%': 값의 어디든 a를 포함하고 있는 모든 값
  ex) 'M_ _ _ _ _ _' : M으로 시작하는 값들 중 전체 길이가 7글자인 값

예) 사원테이블에서 사원들의 이름 중 M으로 시작하는 사원의 정보를
사번, 이름, 직종, 순으로 출력

select employee_id, first_name, job_id
from employees
where first_name like 'M%';


예) 사원테이블에서 이름이 소문자 d로 끝나느 사원의 사번과 이름
직종 순으로 출력

select employee_id, first_name, job_id
from employees
where first_name like '%d';

예) 이름의 어디라도 a가 포함되어 잇는 사원의 정보를
이름, 직종 순으로 출력

select first_name, job_id 
from employees
where job_id like '%a%';

예) 이름의 첫 글자가 M이면서 총 7글자의 이름을 가진 사원의 정보를
사번, 이름 순으로 검색

select employee_id, first_name
from employees
where first_name like 'M_ _ _ _ _ _'; 

문) 사원테이블에서 이름의 세번째 글자에 a가 들어가는 사원들의 정보를
사번, 이름, 순으로 출력

select employee_id, first_name
from employees
where first_name like '__a%';

문) 이름에 소문자 o가 들어가면서 이름이 a로 끝나는 사원들의 정보를
이름, 급여 순으로 조회

select first_name, salary
from employees
where first_name like '%o%a';

문) 이름이 H로시작하면서 6글자 이상인 사원들의 정보를
사번, 이름 순을 조회

select employee_id, first_name
from employees
where first_name like 'H_____%';

문) 사원테이블에서 이름에 s자가 포함되어 잇지 않은  사람들만
사번, 이름으로 검색하시오

select employee_id, first_name
from employees
where first_name like not '%s%';
-------------------------------------------------------------

4. 정렬(ORDER BY)

- 질의 결과에 반환되는 행들을 정렬하고자 할 때 사용
- ODER BY절은 SELECT절의 가장 마지막에 기술
- ASC: 오름차순(생략 가능)
-DESC:내림차순(생략 불가)


예) 사원테이블에서 급여를 많이 받는 사원순으로
사번, 이름, 급여, 입사일을 출력하시오.
단, 급여가 같을 경우 입사일이 빠른 수으로 정렬

select employee_id, first_name, salary, hire_date
from employees
order by salary DESC, hire_date ASC;

문) 사원테이블에서 부서번호가 빠른 순, 부서번호가 같다면, 직종이 빠른 순 직종까지 같다면 급여를 많이 받는 순으로
사번, 이름, 부서번호, 직종,  급여 순으로 출력하라


select employee_id, first_name, department_id, job_id, salary
from employees
order by department_id, job_id, salary DESC;








